[build-system]
requires = ['setuptools>=61.0.0', 'wheel']
build-backend = 'setuptools.build_meta'

[metadata]
name = 'nodimo'
version = '1.1.0'
exclude = ['tests']

[project]
name = 'nodimo'
version = '1.1.0'
authors = [
  {name = 'Rodrigo Castro', email = 'rodrigopcastro018@gmail.com'}
]
maintainers = [
  {name = 'Rodrigo Castro', email = 'rodrigopcastro018@gmail.com'}
]
description = "Nodimo is a tool that creates nondimensional models"
readme = 'README.md'
requires-python = '>=3.9'
license = {file = 'LICENSE'}
keywords = ['dimensional analysis']
classifiers = [
  'Development Status :: 5 - Production/Stable',
  'License :: OSI Approved :: MIT License',
  'Intended Audience :: Education',
  'Intended Audience :: Science/Research',
  'Topic :: Scientific/Engineering',
  'Programming Language :: Python',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3 :: Only',
  'Typing :: Typed',
  'Operating System :: OS Independent',
]
dependencies = ['numpy>=1.0', 'sympy>=1.0']

[project.optional-dependencies]
test = ['mypy>=1.0', 'pytest>=6.2', 'nbval>=0.11', 'coverage>=7.0', 'pytest-cov>=2.10']
dev = ['tox>=4.0', 'tox-pyenv-redux>=1.0']
docs = ['sphinx>=7.2.6', 'furo>=2024.1.29', 'nbsphinx>=0.9.3', 'numpydoc>=1.6.0', 'IPython>=8.8.0']

[project.urls]
'Source' = 'https://github.com/rodrigopcastro018/nodimo'

[tool.setuptools.packages.find]
exclude = ['conda']

[tool.mypy]
python_version = '3.12'
files = 'nodimo'
exclude = ['tests']
ignore_missing_imports = 'True'

[tool.pytest.ini_options]
minversion = '6.2'
addopts = '--nbval --cov=nodimo --cov-config=pyproject.toml --cov-report=term-missing'  # https://github.com/computationalmodelling/nbval/issues/103
testpaths = ['tests', 'docs/tutorials']

[tool.coverage.run]
source = ['nodimo']
data_file = 'coverage/.coverage'
context = '${CONTEXT}'

[tool.coverage.html]
directory = 'coverage/htmlcov'

[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.0
    requires = tox-pyenv-redux>=1.0
    env_list = py{39,310,311,312}-numpy{1.0,1.26.4}-sympy{1.0,1.12},
               type

    [testenv]
    pyenv_discovery = fallback
    deps =
        pytest>=6.2
        nbmake>=1.0
    commands = pytest

    [testenv:type]
    deps = 
        mypy>=1.0
    commands = mypy
"""